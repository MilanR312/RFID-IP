// Hardware version 硬件版本
const uint8_t HARDWARE_VERSION_CMD[] = {0xBB, 0x00, 0x03, 0x00,
                                        0x01, 0x00, 0x04, 0x7E};
// Single polling instruction 单次轮询指令
const uint8_t POLLING_ONCE_CMD[] = {0xBB, 0x00, 0x22, 0x00, 0x00, 0x22, 0x7E};
// Multiple polling instructions 多次轮询指令
const uint8_t POLLING_MULTIPLE_CMD[] = {0xBB, 0x00, 0x27, 0x00, 0x03,
                                        0x22, 0x27, 0x10, 0x83, 0x7E};
// Set the SELECT mode 设置Select模式
const uint8_t SET_SELECT_MODE_CMD[] = {0xBB, 0x00, 0x12, 0x00,
                                       0x01, 0x01, 0x14, 0x7E};
// Set the SELECT parameter instruction 设置Select参数指令
const uint8_t SET_SELECT_PARAMETER_CMD[] = {
    0xBB, 0x00, 0x0C, 0x00, 0x13, 0x01, 0x00, 0x00, 0x00,
    0x20, 0x60, 0x00, 0x30, 0x75, 0x1F, 0xEB, 0x70, 0x5C,
    0x59, 0x04, 0xE3, 0xD5, 0x0D, 0x70, 0xAD, 0x7E};
// SELECT OK RESPONSE 选中成功响应帧
const uint8_t SET_SELECT_OK[]            = {0xBB, 0x01, 0x0C, 0x00,
                                 0x01, 0x00, 0x0E, 0x7E};
const uint8_t GET_SELECT_PARAMETER_CMD[] = {0xBB, 0x00, 0x0B, 0x00,
                                            0x00, 0x0B, 0x7E};
const uint8_t READ_STORAGE_CMD[]         = {0xBB, 0x00, 0x39, 0x00, 0x09, 0x00,
                                    0x00, 0xFF, 0xFF, 0x03, 0x00, 0x00,
                                    0x00, 0x02, 0x45, 0x7E};
const uint8_t READ_STORAGE_ERROR[]       = {0xBB, 0x01, 0xFF, 0x00,
                                      0x01, 0x09, 0x0A, 0x7E};
const uint8_t WRITE_STORAGE_CMD[]   = {0xBB, 0x00, 0x49, 0x00, 0x0D, 0x00, 0x00,
                                     0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x02,
                                     0x12, 0x34, 0x56, 0x78, 0x6D, 0x7E};
const uint8_t WRITE_STORAGE_ERROR[] = {0xBB, 0x01, 0xFF, 0x00,
                                       0x01, 0x10, 0x0A, 0x7E};
// Set the transmitting power 设置发射功率
const uint8_t SET_TX_POWER[] = {0xBB, 0x00, 0xB6, 0x00, 0x02,
                                0x07, 0xD0, 0x8F, 0x7E};