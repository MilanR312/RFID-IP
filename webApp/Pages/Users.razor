@page "/users/"
@using Models
@inject IGebruikerService GebruikerService
@inject ProtectedLocalStorage storage

@if (currentuser == null || currentuser.functie != "dev"){
  <p class="loading">no acces</p>
} else if (gebruikers == null) {
  <p class="loading">Loading</p>
} else {
  <table class="qTable">
    <thead class="qTableHead">
      <tr>
        <td>naam</td>
        <td>leeftijd</td>
        <td>adres</td>
        <td>telefoon</td>
        <td>functie</td>
      </tr>
    </thead>
    <tbody class="qTableBody">
      @foreach (var gebruiker in gebruikers)
      {
        <tr>
            <td>@gebruiker.naam</td>
            <td>@gebruiker.leeftijd</td>
            <td>@gebruiker.adres</td>
            <td>@gebruiker.telefoonNummer</td>
            <td>@gebruiker.functie</td>
        </tr>
      }
    </tbody>
  </table>
}

@code {
  private List<Gebruiker>? gebruikers;

  private Gebruiker? currentuser;


  protected override async Task OnInitializedAsync()
  {
    gebruikers = await GebruikerService.getGebruikerList(); 
  }
  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    var user = await storage.GetAsync<Gebruiker>("user");
    if (user.Success){
      currentuser = user.Value;
    }
    if (firstRender) StateHasChanged();
  }


}