@page "/log"
@inject ITCPService tcp

<PageTitle>log</PageTitle>
<select class="form-control" @bind="@selected" style="width:150px">
         @foreach (var esp in devices)
         {
                 <option value=@esp.Key>@esp.Key</option>
         }
</select>
<p>@selected</p>
@if(devices != null && devices.ContainsKey(selected)){
<div>
    @((MarkupString) devices[selected].log())
</div>
}

@code {
    private Dictionary<string, esp32V2>? devices;
    private string selected = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        devices = tcp.getConnectionList();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        devices = tcp.getConnectionList();
        if (firstRender)
            devices.Values.ToList().ForEach((esp) => esp.updateLogPage=notifyChange);
    }
    public async void notifyChange(){
        await InvokeAsync(() =>{
            Console.WriteLine("updating log");
            StateHasChanged();
        });
    }
}
